# Generated by Django 3.2.13 on 2022-10-01 16:12

from django.db import migrations, models
import django.utils.crypto
import django.utils.timezone
import functools
import src.account.models
import src.core.utils.json_serializer
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('private_metadata', models.JSONField(blank=True, default=dict, encoder=src.core.utils.json_serializer.CustomJsonEncoder, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict, encoder=src.core.utils.json_serializer.CustomJsonEncoder, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=b'I00\n', primary_key=True, serialize=False)),
                ('full_name', models.CharField(blank=True, max_length=256)),
                ('phone_number', src.account.models.PossiblePhoneNumberField(blank=True, db_index=True, default='', max_length=128, region=None)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('citizen_identification', models.CharField(blank=True, max_length=12, null=True)),
                ('employee_type', models.CharField(blank=True, choices=[('driver', 'driver'), ('call_center', 'call_center')], max_length=25, null=True)),
                ('car_type', models.CharField(blank=True, choices=[('four_seat', 'four_seat'), ('seven_seat', 'seven_seat'), ('any', 'any')], max_length=25, null=True)),
                ('car_brand', models.CharField(blank=True, max_length=256, null=True)),
                ('license_plate', models.CharField(blank=True, max_length=256, null=True)),
                ('car_color', models.CharField(blank=True, max_length=256, null=True)),
                ('avatar', models.ImageField(blank=True, max_length=512, null=True, upload_to='user-avatars')),
                ('address', models.CharField(blank=True, max_length=512, null=True)),
                ('current_position', models.JSONField(blank=True, default=list, null=True)),
                ('is_available', models.BooleanField(default=False)),
                ('id_token', models.CharField(blank=True, max_length=1024, null=True, unique=True)),
                ('expiration_time', models.DateTimeField(blank=True, null=True)),
                ('fcm_token', models.CharField(blank=True, max_length=1024, null=True, unique=True)),
                ('fcm_token_updated_at', models.DateTimeField(blank=True, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('jwt_token_key', models.CharField(default=functools.partial(django.utils.crypto.get_random_string, *(), **{'length': 12}), max_length=12)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
